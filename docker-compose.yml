version: '3.3'

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    command: ['npm', 'run', 'docker-start']
    image: portal/ng-app:latest
    volumes:
      - ./ng-app/src/:/root/ng-app/src/
    ports:
      - 4200:4200
      - 9876:9876
    environment:
      - DISPLAY=:99
      - CHROME_BIN=chromium
    restart: always
    container_name: ng-app

  node-service:
    build:
      context: .
      dockerfile: Dockerfile.node-service
    command: ['npm', 'run', 'start-be-debug']
    image: portal/node-service:latest
    volumes:
      - ./node-service:/root/portal/node-service
    ports:
      - 8080:8080
      - 9229:9299
    restart: always
    depends_on:
      - mongo
    container_name: node-service

  python-service:
    build:
      context: .
      dockerfile: Dockerfile.python-service
    image: portal/python-service:latest
    volumes:
      - ./python-service:/root/portal/python-service
    ports:
      - 5000:5000
    restart: always
    container_name: python-service

  mongo:
    image: mongo:latest
    volumes:
      - ./mongodb/db:/data/db/
    expose:
      - '27017'
    ports:
      - 27017:27017
    restart: always
    container_name: mongo

  # nginx:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.nginx
  #   command: ['nginx', '-g', 'daemon off;']
  #   image: portal/nginx:latest
  #   expose:
  #     - '80'
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 80:80
  #   restart: always
  #   depends_on:
  #     - web
  #     - api
  #     - rest
  #   container_name: nginx

  # sonarqube:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.sonarqube
  #   image: portal/sonarqube:latest
  #   ports:
  #     - 9000:9000
  #     - 9092:9092
  #   volumes:
  #     - $PWD/sonar:/opt/sonarqube/data
  #   restart: always
  #   container_name: sonarqube
